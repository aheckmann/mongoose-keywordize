{"name":"Mongoose-keywordize","body":"# Mongoose-keywordize Plugin\r\n\r\nProvides keyword derivation for [Mongoose](http://mongoosejs.com) documents.\r\n\r\n[![Build Status](https://secure.travis-ci.org/aheckmann/mongoose-keywordize.png)](http://travis-ci.org/aheckmann/mongoose-keywordize)\r\n\r\nOptions:\r\n\r\n  - fields: an array of paths you want watched and converted into keywords\r\n  - fn: a custom function to execute when keywordize() runs\r\n\r\nExample:\r\n\r\n```js\r\nvar schema = new Schema({ name: String, title: String });\r\nschema.plugin(keywordize, { fields: 'name title'.split(' ') });\r\n```\r\n\r\nThis will introduce a new `keywordize()` document method which detects if any of the passed fields have been modified and updates the new `keywords` property appropriately.\r\n\r\nExample:\r\n\r\n```js\r\nvar Person = mongoose.model('Person', schema);\r\nvar me = new Person({ name: 'aaron' });\r\nme.keywordize();\r\nconsole.log(me.keywords) // ['aaron']\r\n```\r\n\r\nThe `keywordize` method is always called upon saving each document, auto-updating to the latest keywords.\r\n\r\n```js\r\nme.title = 'Mr';\r\nme.save(function (err) {\r\n  console.log(me.keywords) // ['aaron', 'Mr']\r\n})\r\n```\r\n\r\nOne may also pass an optional function to run custom logic within the call to `keywordize`.\r\n\r\n```js\r\n\r\nvar opts = {};\r\nopts.fields = ['name', 'title']\r\nopts.fn = function custom () {\r\n  if ('Mister' === this.title) {\r\n    return 'Mr';\r\n  }\r\n}\r\nvar schema = new Schema({ name: String, title: String });\r\nschema.plugin(keywordize, opts);\r\n\r\nvar Person = mongoose.model('Person', schema);\r\nvar me = new Person({ name: 'aaron' });\r\nme.title = 'Mister';\r\nme.keywordize();\r\nconsole.log(me.keywords) // ['aaron', 'Mister', 'Mr']\r\n```\r\n\r\nThe optional function will be executed within the context of the document meaning we have access to the documents properties through the `this` keyword.\r\n\r\nEither a an Array or single string may be returned from the function and will be pushed onto the keywords array.\r\n\r\n## Casing\r\n\r\nBy default mongoose-keywordize lowercases the keywords. To preserve casing pass the `upper: true` option to the plugin.\r\n\r\n## Mongoose Version\r\n`>= 2.x`\r\n\r\n[LICENCE](https://github.com/aheckmann/mongoose-keywordize/blob/master/LICENSE)\r\n\r\n\r\n\r\n","tagline":"Derives keywords from document properties","google":"UA-30707590-1","note":"Don't delete this file! It's used internally to help with page regeneration."}